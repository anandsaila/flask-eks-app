# .github/workflows/deploy.yml
name: Deploy Flask App to EKS

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: ap-south-1 # Change this to your region
  ECR_REPOSITORY: flask-app # Change this to your ECR repo name
  EKS_CLUSTER: dev-cluster # Change this to your cluster name

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push image to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update kube config
      run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }}

    # Add these new steps here
    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.12.0

    - name: Verify ALB Controller
      run: |
        kubectl get pods -n kube-system -l app.kubernetes.io/name=aws-load-balancer-controller
        if ($LASTEXITCODE -ne 0) {
          echo "Installing AWS Load Balancer Controller..."
          helm repo add eks https://aws.github.io/eks-charts
          helm repo update eks
          helm upgrade --install aws-load-balancer-controller eks/aws-load-balancer-controller `
            -n kube-system `
            -f alb-controller-values.yaml
        }
    # End of added changes
    
    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Update the deployment image
        sed -i "s|${ECR_REPOSITORY_URI}:${IMAGE_TAG}|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" deployment.yaml
        
        # Apply Kubernetes manifests
        kubectl apply -f deployment.yaml
        kubectl apply -f ingress.yaml
